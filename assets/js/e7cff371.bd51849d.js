"use strict";(self.webpackChunksemantix_mlhub_docs=self.webpackChunksemantix_mlhub_docs||[]).push([[7657],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(n),f=i,d=m["".concat(s,".").concat(f)]||m[f]||c[f]||r;return n?a.createElement(d,l(l({ref:t},p),{},{components:n})):a.createElement(d,l({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=f;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:i,l[1]=o;for(var u=2;u<r;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2267:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var a=n(7462),i=(n(7294),n(3905));const r={sidebar_position:3},l="Training a Classifier Model",o={unversionedId:"automl/training-a-classifier-model",id:"automl/training-a-classifier-model",title:"Training a Classifier Model",description:"In Semantix ML Hub, we offer a comprehensive solution for training classifier models, making it effortless to find the best pipeline for your classification tasks. Our system combines three key components: automatic pipeline selection, feature selection, and model selection, all guided by a scoring function optimized for your project's objectives.",source:"@site/docs/automl/training-a-classifier-model.md",sourceDirName:"automl",slug:"/automl/training-a-classifier-model",permalink:"/semantix-mlhub-docs/docs/automl/training-a-classifier-model",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Auto Feature Selection",permalink:"/semantix-mlhub-docs/docs/automl/auto-feature-selection"},next:{title:"Training a Regression Model",permalink:"/semantix-mlhub-docs/docs/automl/training-a-regression-model"}},s={},u=[{value:"Key Components:",id:"key-components",level:3},{value:"Arguments Needed for Running an AutoML Job:",id:"arguments-needed-for-running-an-automl-job",level:3},{value:"Results:",id:"results",level:3},{value:"Benefits:",id:"benefits",level:3}],p={toc:u},m="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"training-a-classifier-model"},"Training a Classifier Model"),(0,i.kt)("p",null,"In Semantix ML Hub, we offer a comprehensive solution for training classifier models, making it effortless to find the best pipeline for your classification tasks. Our system combines three key components: automatic pipeline selection, feature selection, and model selection, all guided by a scoring function optimized for your project's objectives."),(0,i.kt)("h3",{id:"key-components"},"Key Components:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Automatic Pipeline Selection:")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Our platform automatically identifies the best pipeline, which includes data preprocessing steps and the machine learning model, tailored to your classification task."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Auto Feature Selection:")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Feature selection is crucial for model performance. We employ Genetic Algorithms to efficiently select the most relevant features based on your specified scoring function and the desired number of features."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Auto Balanced Dataset:")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"If task is classification type, and to-balance is enabled, the AutoML will balance dataset as: ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Oversample")," when minority class that less 1%"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Undersample")," when minority class between 1% and 20%"))))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Auto Model Selection (TPOT):")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"We leverage the TPOT package to find the best combination of preprocessing and machine learning models for your classification task. TPOT optimizes these combinations based on the scoring function you define."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Results:")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"AutoML provides various pieces of information when executed, including several metrics, training and testing datasets, pipeline DAG, and binary of the model."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"SDK Integration:")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"We provide an SDK client that serves as a convenient wrapper for our backend API. This client enables you to run AutoML jobs, list job history, and access specific job details easily.")))),(0,i.kt)("h3",{id:"arguments-needed-for-running-an-automl-job"},"Arguments Needed for Running an AutoML Job:"),(0,i.kt)("p",null,"When running an AutoML job for classifier model training, you'll need to provide the following essential arguments:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"feature_table_name"),": The name of the feature table used for feature loading."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"target_name"),": The name of the target variable you want to predict."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"id_column"),": The name of the column containing unique identifiers in your dataframe."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"features_selected"),": A subset of features to select from the feature table."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"start_date"),": The date from which to load the features until the present date."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"end_date"),": The date until which to load the features."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"task"),": Specify that this is a classification task."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"scoring"),": Define the scoring function to use for evaluation. The scoring function may vary depending on your specific classification task."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"num_features"),": Specify the final number of features you want in the model."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"generations"),": The number of runs the Genetic Algorithm will perform before completing the optimization process."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"to-balance"),": If enabled and the task is of a classifier type, AutoML will utilize oversample and undersample methods to balance the dataset.")),(0,i.kt)("h3",{id:"results"},"Results:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The JSON result include:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"List of the features selected"),(0,i.kt)("li",{parentName:"ul"},"Metrics to Train and Test Datasets: Accuracy, Balanced Accuracy, Confusion Matrix, f1, ks, precission, recall and ROC AUC.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"When multiclass, not calculate ROC AUC and Confusion Matrix"))),(0,i.kt)("li",{parentName:"ul"},"Pipeline steps to inference"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"PipelineDAG HTML"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Display the pipeline step in HTML format for visualization."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Binary Model"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The binary model file is saved in pickle format."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Train and Test Datasets."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The datasets are in CSV format.")))),(0,i.kt)("h3",{id:"benefits"},"Benefits:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Efficiency:")," Automate the entire process of classifier model development, from preprocessing to model selection, saving you time and effort.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Customization:")," Tailor the feature selection, model selection, and scoring function to meet the unique requirements of your classification task.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Performance Optimization:")," The system optimizes your pipeline, ensuring that it delivers the best possible results.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Objective-Driven:")," Create classification models that align with your project's specific goals and metrics."))),(0,i.kt)("p",null,"Semantix ML Hub's AutoML for classifier models streamlines the process of building high-performing models for classification tasks. This integrated solution allows you to focus on extracting valuable insights from your data, knowing that your classification model is optimized for success."))}c.isMDXComponent=!0}}]);